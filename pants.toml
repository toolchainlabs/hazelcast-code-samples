[GLOBAL]
pants_version = "2.8.0.dev3"
pantsrc = false

backend_packages.add = [
  "pants.backend.experimental.java",
  "pants.backend.experimental.java.debug_goals",
]

[jvm]
default_resolve = 'default'
resolves = '''{
  "default": "3rdparty/jvm/default.lockfile",
}'''

[java-infer]
# TODO: Generated by dumping the hazelcast jar. This is a somewhat unlikely case, because this
# repo namespaces everything under `com.hazelcast.examples`, which prevents us from wildcarding
# all of `com.hazelcast`. But it might still be worth adding a `!exclude` syntax.
third_party_import_mapping = '''{
  "com.hazelcast.aggregation.**": "com.hazelcast:hazelcast",
  "com.hazelcast.auditlog.**": "com.hazelcast:hazelcast",
  "com.hazelcast.aws.**": "com.hazelcast:hazelcast",
  "com.hazelcast.azure.**": "com.hazelcast:hazelcast",
  "com.hazelcast.cache.**": "com.hazelcast:hazelcast",
  "com.hazelcast.cardinality.**": "com.hazelcast:hazelcast",
  "com.hazelcast.client.**": "com.hazelcast:hazelcast",
  "com.hazelcast.cluster.**": "com.hazelcast:hazelcast",
  "com.hazelcast.collection.**": "com.hazelcast:hazelcast",
  "com.hazelcast.com.**": "com.hazelcast:hazelcast",
  "com.hazelcast.config.**": "com.hazelcast:hazelcast",
  "com.hazelcast.console.**": "com.hazelcast:hazelcast",
  "com.hazelcast.core.**": "com.hazelcast:hazelcast",
  "com.hazelcast.cp.**": "com.hazelcast:hazelcast",
  "com.hazelcast.crdt.**": "com.hazelcast:hazelcast",
  "com.hazelcast.durableexecutor.**": "com.hazelcast:hazelcast",
  "com.hazelcast.executor.**": "com.hazelcast:hazelcast",
  "com.hazelcast.flakeidgen.**": "com.hazelcast:hazelcast",
  "com.hazelcast.function.**": "com.hazelcast:hazelcast",
  "com.hazelcast.gcp.**": "com.hazelcast:hazelcast",
  "com.hazelcast.hotrestart.**": "com.hazelcast:hazelcast",
  "com.hazelcast.instance.**": "com.hazelcast:hazelcast",
  "com.hazelcast.internal.**": "com.hazelcast:hazelcast",
  "com.hazelcast.io.**": "com.hazelcast:hazelcast",
  "com.hazelcast.jet.**": "com.hazelcast:hazelcast",
  "com.hazelcast.json.**": "com.hazelcast:hazelcast",
  "com.hazelcast.kubernetes.**": "com.hazelcast:hazelcast",
  "com.hazelcast.logging.**": "com.hazelcast:hazelcast",
  "com.hazelcast.map.**": "com.hazelcast:hazelcast",
  "com.hazelcast.memory.**": "com.hazelcast:hazelcast",
  "com.hazelcast.multimap.**": "com.hazelcast:hazelcast",
  "com.hazelcast.nearcache.**": "com.hazelcast:hazelcast",
  "com.hazelcast.nio.**": "com.hazelcast:hazelcast",
  "com.hazelcast.nonapi.**": "com.hazelcast:hazelcast",
  "com.hazelcast.org.**": "com.hazelcast:hazelcast",
  "com.hazelcast.osgi.**": "com.hazelcast:hazelcast",
  "com.hazelcast.partition.**": "com.hazelcast:hazelcast",
  "com.hazelcast.persistence.**": "com.hazelcast:hazelcast",
  "com.hazelcast.projection.**": "com.hazelcast:hazelcast",
  "com.hazelcast.query.**": "com.hazelcast:hazelcast",
  "com.hazelcast.replicatedmap.**": "com.hazelcast:hazelcast",
  "com.hazelcast.ringbuffer.**": "com.hazelcast:hazelcast",
  "com.hazelcast.scheduledexecutor.**": "com.hazelcast:hazelcast",
  "com.hazelcast.security.**": "com.hazelcast:hazelcast",
  "com.hazelcast.spi.**": "com.hazelcast:hazelcast",
  "com.hazelcast.splitbrainprotection.**": "com.hazelcast:hazelcast",
  "com.hazelcast.sql.**": "com.hazelcast:hazelcast",
  "com.hazelcast.topic.**": "com.hazelcast:hazelcast",
  "com.hazelcast.transaction.**": "com.hazelcast:hazelcast",
  "com.hazelcast.version.**": "com.hazelcast:hazelcast",
  "com.hazelcast.wan.**": "com.hazelcast:hazelcast",
}'''

[anonymous-telemetry]
enabled = true
repo_id = "1F6A0F61-C73B-4A9A-B936-14D1384EA3BB"
